// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  name            String
  email           String           @unique
  createdAt       DateTime         @default(now())
  updatedAt       DateTime?        @updatedAt
  userCredentials UserCredential[]
  roles           UserRole[]
}

model UserCredential {
  id        Int       @id @default(autoincrement())
  userId    Int
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  user      User      @relation(fields: [userId], references: [id])
}

enum PermissionType {
  DEFAULT
  CUSTOM
}

model Permission {
  id        Int              @id @default(autoincrement())
  name      String
  code      String           @unique
  createdAt DateTime         @default(now())
  updatedAt DateTime?        @updatedAt
  roles     RolePermission[]
  type      PermissionType   @default(CUSTOM)
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String
  code        String           @unique
  createdAt   DateTime         @default(now())
  updatedAt   DateTime?        @updatedAt
  permissions RolePermission[]
  users       UserRole[]
}

model RolePermission {
  roleCode       String
  permissionCode String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime?  @updatedAt
  role           Role       @relation(fields: [roleCode], references: [code])
  permission     Permission @relation(fields: [permissionCode], references: [code])

  @@id([roleCode, permissionCode])
}

model UserRole {
  userId    Int
  roleCode  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  role      Role      @relation(fields: [roleCode], references: [code])

  @@id([userId, roleCode])
}
